<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何搭建博客</title>
    <link href="/2021/02/21/%E6%90%AD%E5%BB%BA%E5%A5%BD%E7%9C%8B%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BD%BF%E7%94%A8Hexo%E8%BF%9B%E8%A1%8C%E6%90%AD%E5%BB%BA%EF%BC%89/"/>
    <url>/2021/02/21/%E6%90%AD%E5%BB%BA%E5%A5%BD%E7%9C%8B%E7%9A%84%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BD%BF%E7%94%A8Hexo%E8%BF%9B%E8%A1%8C%E6%90%AD%E5%BB%BA%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建好看的静态博客（使用Hexo进行搭建）"><a href="#搭建好看的静态博客（使用Hexo进行搭建）" class="headerlink" title="搭建好看的静态博客（使用Hexo进行搭建）"></a><a href="https://www.cnblogs.com/NinWoo/p/9649162.html">搭建好看的静态博客（使用Hexo进行搭建）</a></h1><p>经常看到大牛的博客非常的高大帅气，虽然我很渣，但是逼格不能输，所以有了以下的搭建记录。</p><p>我的成果<a href="https://smartdongwei.github.io/">smartdongwei</a>,喜欢的可以参考下面的记录一起来动手搞起来。</p><h2 id="安装Git-Bash"><a href="#安装Git-Bash" class="headerlink" title="安装Git Bash"></a>安装Git Bash</h2><p>访问<a href="https://npm.taobao.org/mirrors/git-for-windows/v2.30.1.windows.1/Git-2.30.1-64-bit.exe">git</a>下载最新版本的git bash</p><p>安装完成之后，右键打开git bash,设置用户名和邮件信息</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs verilog">git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.name</span> <span class="hljs-string">&quot;你的GitHub用户名&quot;</span><br>git <span class="hljs-keyword">config</span> --<span class="hljs-keyword">global</span> user<span class="hljs-variable">.email</span> <span class="hljs-string">&quot;你的GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>生成ssh秘钥文件</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">&quot;GitHub注册邮箱&quot;</span><br></code></pre></td></tr></table></figure><p>直接三个回车即可，默认不需要设置密码。</p><p>查看生成的公钥</p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">cat ~<span class="hljs-regexp">/.ssh/i</span>d_rsa.pub<br></code></pre></td></tr></table></figure><p>复制内容，打开<a href="https://github.com/settings/keys">github setting keys</a>界面，创建新的SSH key,并粘贴公钥到Key输入框中。</p><p>在git bash中测试是否配置成功</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">ssh <span class="hljs-symbol">git@</span>github.com<br></code></pre></td></tr></table></figure><p>出现：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs applescript">PTY allocation request failed <span class="hljs-keyword">on</span> channel <span class="hljs-number">0</span><br>Hi Ninwoo! You&#x27;ve successfully authenticated, <span class="hljs-keyword">but</span> GitHub <span class="hljs-keyword">does</span> <span class="hljs-keyword">not</span> provide shell access.<br>Connection <span class="hljs-keyword">to</span> github.com closed.<br></code></pre></td></tr></table></figure><p>证明设置成功。</p><h2 id="创建GitHub仓库"><a href="#创建GitHub仓库" class="headerlink" title="创建GitHub仓库"></a>创建GitHub仓库</h2><p>创建新的仓库，仓库名为[用户名].github.io,用户名用Github名称代替。</p><p>这样做的主要目的就是为了以后可以通过该网址进行访问你的博客主页，所以要仔细设置。在这里，我配置成smartdongwei.github.io<br>以下的配置中，也需要对应修改为你自己的仓库名。</p><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>访问<a href="https://link.zhihu.com/?target=https://nodejs.org/en/download/">Node.js</a>官网下载安装包。</p><p>下载完成后，点击安装。打开CMD查看是否安装成功。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">C</span>:\Users\ljo<span class="hljs-number">04</span>&gt;node -v<br><span class="hljs-attribute">v8</span>.<span class="hljs-number">12</span>.<span class="hljs-number">0</span><br><br><span class="hljs-attribute">C</span>:\Users\ljo<span class="hljs-number">04</span>&gt;npm -v<br><span class="hljs-attribute">6</span>.<span class="hljs-number">4</span>.<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>如果上述命令均正常通过，则安装完成。</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>1.创建一个新的文件夹作为Hexo的开发目录，这里我命名为Hexo_project</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">E:\project&gt;<span class="hljs-built_in">mkdir</span> Hexo_project<br></code></pre></td></tr></table></figure><p>2.使用npm安装Hexo</p><p>为了提高安装速度，先配置淘宝npm镜像</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">E:\project\Hexo_project&gt;npm <span class="hljs-built_in">config</span> <span class="hljs-built_in">set</span> registry https:<span class="hljs-comment">//registry.npm.taobao.org</span><br></code></pre></td></tr></table></figure><p>3.安装Hexo</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">E:</span>\project\Hexo_project&gt;npm install -g hexo-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><p>4.初始化hexo</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">E</span>:\project\Hexo_project&gt;hexo init blog<br><span class="hljs-attribute">INFO</span>  Cloning hexo-starter to E:\project\Hexo_project\blog<br><span class="hljs-attribute">Cloning</span> into &#x27;E:\project\Hexo_project\blog&#x27;...<br><span class="hljs-attribute">remote</span>: Counting objects: <span class="hljs-number">68</span>, done.<br><span class="hljs-attribute">remote</span>: Total <span class="hljs-number">68</span> (delta <span class="hljs-number">0</span>), reused <span class="hljs-number">0</span> (delta <span class="hljs-number">0</span>), pack-reused <span class="hljs-number">67</span><br><span class="hljs-attribute">Unpacking</span> objects: <span class="hljs-number">100</span>% (<span class="hljs-number">68</span>/<span class="hljs-number">68</span>), done.<br><span class="hljs-attribute">Submodule</span> &#x27;themes/landscape&#x27; (https://github.com/hexojs/hexo-theme-landscape.git) registered for path &#x27;themes/landscape&#x27;<br><span class="hljs-attribute">Cloning</span> into &#x27;E:/project/Hexo_project/blog/themes/landscape&#x27;...<br><span class="hljs-attribute">remote</span>: Counting objects: <span class="hljs-number">838</span>, done.<br><span class="hljs-attribute">remote</span>: Compressing objects: <span class="hljs-number">100</span>% (<span class="hljs-number">6</span>/<span class="hljs-number">6</span>), done.<br><span class="hljs-attribute">Receiving</span> objects:  <span class="hljs-number">26</span>% (<span class="hljs-number">222</span>/<span class="hljs-number">838</span>), <span class="hljs-number">292</span>.<span class="hljs-number">01</span> KiB | <span class="hljs-number">88</span>.<span class="hljs-number">00</span> KiB/s<br></code></pre></td></tr></table></figure><p>这个过程可能需要等待一阵时间</p><p>5.测试站点是否创建成功</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript"># 创建一篇博客test<br>E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo n test<br><br># 生成博客<br>E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo g<br><br># 启动服务器预览<br>E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo s<br></code></pre></td></tr></table></figure><p>这时，可以打开浏览器访问<a href="http://localhost:4000/%EF%BC%8C%E6%9F%A5%E7%9C%8Bblog%E7%95%8C%E9%9D%A2%EF%BC%8C%E5%8F%91%E7%8E%B0%E5%B7%B2%E7%BB%8F%E5%88%9B%E5%BB%BA%E5%A5%BD%E6%96%B0%E7%9A%84%E6%96%87%E7%AB%A0test%E3%80%82">http://localhost:4000/，查看blog界面，发现已经创建好新的文章test。</a></p><h2 id="推送至网站"><a href="#推送至网站" class="headerlink" title="推送至网站"></a>推送至网站</h2><p>1.修改blog配置文件<code>E:\project\Hexo_project\blog\_config.yml</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs dts"><span class="hljs-symbol">deploy:</span><br><span class="hljs-symbol">  type:</span> git<br><span class="hljs-symbol">  repo:</span> git@github.com:smartdongwei/smartdongwei.github.io.git<br><span class="hljs-symbol">  branch:</span> master<br></code></pre></td></tr></table></figure><blockquote></blockquote><p>注意：这里repo要选择ssh的git库链接，否则会在部署的时候报错</p><p>2.安装Git部署插件</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>3.部署博客</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo clean<br>E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo g<br>E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo d<br></code></pre></td></tr></table></figure><p>4.测试是否部署成功</p><p>现在访问<a href="https://smartdongwei.github.io/%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%87%BA%E7%8E%B0blog%E7%95%8C%E9%9D%A2%E8%BF%99%E8%AF%81%E6%98%8E%E9%83%A8%E7%BD%B2%E6%88%90%E5%8A%9F%E3%80%82">https://smartdongwei.github.io/，如果出现blog界面这证明部署成功。</a></p><h2 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h2><p>如果觉得默认主题实在是太丑，可以更换其他<a href="https://hexo.io/themes/">主题</a>,下面的教程中，我选择Next主题。</p><p>1.下载主题</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">E:\project\Hexo_project\blog&gt; git clone https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/theme-next/</span>hexo-theme-<span class="hljs-keyword">next</span> themes/<span class="hljs-keyword">next</span><br></code></pre></td></tr></table></figure><p>2.打开配置文件<code>E:\project\Hexo_project\blog\_config.yml</code>更换主题</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: next<br>plugins: hexo-generate-feed<br></code></pre></td></tr></table></figure><p>3.重新部署blog</p><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs taggerscript">E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo clean<br>E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo g<br>E:<span class="hljs-symbol">\p</span>roject<span class="hljs-symbol">\H</span>exo_project<span class="hljs-symbol">\b</span>log&gt;hexo d<br></code></pre></td></tr></table></figure><h2 id="相关插件的url地址"><a href="#相关插件的url地址" class="headerlink" title="相关插件的url地址"></a>相关插件的url地址</h2><p>1：<a href="https://hexo.io/zh-cn/docs/">hexo的中文文档</a></p><p>2:   <a href="https://hexo.fluid-dev.com/docs/">Fluid</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
